generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String   @id @default(uuid())
  supabaseId             String   @unique
  email                  String   @unique
  fullName               String
  role                   Role
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  // Relations
  patient    Patient?
  doctor     Doctor?

  // Indexes
  @@index([supabaseId])
  @@index([email])
}

model Patient {
  id              String   @id @default(uuid())
  supabaseId      String   @unique
  dateOfBirth     DateTime
  gender          String
  phone           String
  address         String
  medicalHistory  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [supabaseId], references: [supabaseId])

  appointments    Appointment[]
  prescriptions   Prescription[]

  @@index([supabaseId])
}

model Doctor {
  id              String   @id @default(uuid())
  supabaseId      String   @unique
  specialization  String
  phone           String
  address         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [supabaseId], references: [supabaseId])

  appointments    Appointment[]
  prescriptions   Prescription[]

  @@index([supabaseId])
}

model Appointment {
  id          String   @id @default(uuid())
  patientId   String
  doctorId    String
  date        DateTime
  time        String?
  type        AppointmentType @default(IN_PERSON)
  notes       String?
  status      AppointmentStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  patient     Patient @relation(fields: [patientId], references: [id])
  doctor      Doctor  @relation(fields: [doctorId], references: [id])

  @@index([patientId])
  @@index([doctorId])
}

model Prescription {
  id           String   @id @default(uuid())
  patientId    String
  doctorId     String
  medication   String
  dosage       String
  instructions String
  createdAt    DateTime @default(now())

  patient      Patient @relation(fields: [patientId], references: [id])
  doctor       Doctor  @relation(fields: [doctorId], references: [id])

  @@index([patientId])
  @@index([doctorId])
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
}

enum AppointmentStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
  CANCELED
}

enum AppointmentType {
  IN_PERSON
  ONLINE
  VIDEO_CALL
}
